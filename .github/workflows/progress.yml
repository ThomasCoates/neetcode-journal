name: Update Progress

on:
  push:
    paths:
      - '**/*'
  schedule:
    # Runs at 9:00 AM America/New_York (13:00 UTC during DST).
    - cron: '0 13 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TZ: America/New_York
    steps:
      - uses: actions/checkout@v4

      - name: Compute totals (ET-based)
        id: calc
        shell: bash
        run: |
          set -euo pipefail

          GOAL=150
          # Count top-level dirs whose names start with a digit
          SOLVED=$(find . -maxdepth 1 -type d -regex './[0-9].*' | wc -l | xargs)

          # ET dates
          TODAY_ET=$(date +"%F")                    # example 2025-10-14
          TODAY_HUMAN=$(date +"%b %d, %Y")         # example Oct 14, 2025
          YESTERDAY_ET=$(date -d "$TODAY_ET -1 day" +"%F")

          STATE_FILE=".progress.json"
          if [[ -f "$STATE_FILE" ]]; then
            LAST_DATE=$(jq -r '.last_date // ""' "$STATE_FILE")
            LAST_SOLVED=$(jq -r '.last_solved // 0' "$STATE_FILE")
            STREAK=$(jq -r '.streak // 0' "$STATE_FILE")
            TODAY_SOLVES=$(jq -r '.today_solves // 0' "$STATE_FILE")
          else
            LAST_DATE=""
            LAST_SOLVED=0
            STREAK=0
            TODAY_SOLVES=0
          fi

          # Default last_date if empty (first run)
          if [[ -z "$LAST_DATE" ]]; then
            LAST_DATE="$TODAY_ET"
          fi

          # Rollover the per-day counter if we've moved to a new day
          if [[ "$LAST_DATE" != "$TODAY_ET" ]]; then
            TODAY_SOLVES=0
          fi

          # Decide streak and today's solve counter when total increases
          if (( SOLVED > LAST_SOLVED )); then
            DELTA=$(( SOLVED - LAST_SOLVED ))

            if [[ "$LAST_DATE" == "$TODAY_ET" ]]; then
              # Same calendar day: don't change streak, just add to today's counter
              TODAY_SOLVES=$(( TODAY_SOLVES + DELTA ))
            elif [[ "$LAST_DATE" == "$YESTERDAY_ET" ]]; then
              # Consecutive day with new solves: increment streak and start today's counter
              STREAK=$(( STREAK + 1 ))
              TODAY_SOLVES=$DELTA
            else
              # Gap since last solve: reset streak and start today's counter
              STREAK=1
              TODAY_SOLVES=$DELTA
            fi

            LAST_DATE="$TODAY_ET"
            LAST_SOLVED="$SOLVED"
          fi

          # Guard sensible minimums
          if (( STREAK <= 0 )); then
            STREAK=1
          fi
          if (( TODAY_SOLVES < 0 )); then
            TODAY_SOLVES=0
          fi

          # Percent complete (floor, then clamp to 100)
          PCT=$(( 100 * SOLVED / GOAL ))
          if (( PCT > 100 )); then PCT=100; fi

          # Save state
          jq -n \
            --arg d "$LAST_DATE" \
            --argjson s "$LAST_SOLVED" \
            --argjson k "$STREAK" \
            --argjson t "$TODAY_SOLVES" \
            '{last_date:$d, last_solved:$s, streak:$k, today_solves:$t}' > "$STATE_FILE"

          # Outputs
          {
            echo "goal=$GOAL"
            echo "solved=$SOLVED"
            echo "pct=$PCT"
            echo "today_human=$TODAY_HUMAN"
            echo "streak=$STREAK"
            echo "today_solves=$TODAY_SOLVES"
          } >> "$GITHUB_OUTPUT"

      - name: Rewrite README block
        shell: bash
        run: |
          set -euo pipefail
          solved="${{ steps.calc.outputs.solved }}"
          goal="${{ steps.calc.outputs.goal }}"
          pct="${{ steps.calc.outputs.pct }}"
          today="${{ steps.calc.outputs.today_human }}"
          streak="${{ steps.calc.outputs.streak }}"
          today_solves="${{ steps.calc.outputs.today_solves }}"

          # Streak badge/text
          if [[ "$streak" -eq 1 ]]; then
            STREAK_BADGE="1_day"
            STREAK_TEXT="1-day streak"
          else
            STREAK_BADGE="${streak}_days"
            STREAK_TEXT="${streak}-day streak"
          fi

          # ðŸ”¥ when multiple solves today
          if (( today_solves > 1 )); then
            FIRE=" ðŸ”¥"
          else
            FIRE=""
          fi

          # "Solved X new problems today"
          if (( today_solves > 0 )); then
            if (( today_solves == 1 )); then
              TODAY_LINE="  <div style=\"margin-top:2px;font-size:13px;color:#a3e635;\">Solved ${today_solves} new problem today</div>"
            else
              TODAY_LINE="  <div style=\"margin-top:2px;font-size:13px;color:#a3e635;\">Solved ${today_solves} new problems today ðŸ”¥</div>"
            fi
          else
            TODAY_LINE=""
          fi

          # "Goal reached!" line
          if (( solved >= goal )); then
            GOAL_LINE='  <div style="margin-top:2px;font-size:13px;color:#22c55e;">ðŸŽ¯ Goal reached!</div>'
          else
            GOAL_LINE=''
          fi

          awk -v solved="$solved" \
              -v goal="$goal" \
              -v pct="$pct" \
              -v today="$today" \
              -v sbadge="$STREAK_BADGE" \
              -v stext="$STREAK_TEXT" \
              -v fire="$FIRE" \
              -v todayline="$TODAY_LINE" \
              -v goalline="$GOAL_LINE" '
            BEGIN { inside=0 }
            /<!-- PROGRESS_START -->/ {
              print; inside=1;
              print "<div align=\"center\">\n"
              print "  <img src=\"https://img.shields.io/badge/Solved-" solved "-22c55e?style=for-the-badge\" alt=\"Solved\">"
              print "  <img src=\"https://img.shields.io/badge/Streak-" sbadge "-3b82f6?style=for-the-badge\" alt=\"Streak\">"
              print "  <img src=\"https://img.shields.io/badge/Goal-" goal "_problems-8b5cf6?style=for-the-badge\" alt=\"Goal\">\n"
              print "  <div style=\"margin-top:14px;background:#1f2937;border-radius:10px;width:520px;height:16px;display:inline-block;\">"
              print "    <div style=\"background:linear-gradient(90deg,#22c55e,#3b82f6);height:16px;width:" pct "%;border-radius:10px;\"></div>"
              print "  </div>\n"
              print "  <div style=\"margin-top:8px;font-weight:600;\">" solved " / " goal " problems â€¢ " stext fire "</div>"
              if (todayline != "") { print todayline }
              if (goalline  != "") { print goalline }
              print "  <div style=\"margin-top:4px;font-size:12px;color:#9ca3af;\">Updated: " today " (America/New_York)</div>\n"
              print "</div>";
              next
            }
            /<!-- PROGRESS_END -->/ { print; inside=0; next }
            inside==0 { print }
          ' README.md > README.tmp && mv README.tmp README.md

      - name: Commit changes
        run: |
          set -euo pipefail
          if ! git diff --quiet; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add README.md .progress.json
            git commit -m "chore: update progress (solved=${{ steps.calc.outputs.solved }}, today=${{ steps.calc.outputs.today_solves }}, streak=${{ steps.calc.outputs.streak }}, pct=${{ steps.calc.outputs.pct }}%)"
            git push
          fi